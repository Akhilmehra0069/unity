<!--  
 * Unity - Communities
 * 
 * Community is critical to the student experience--but building community is 
 * just plain hard. Built on Communities and designed specifically for higher ed, 
 * Unity is a powerful networking tool to help you generate engagement and 
 * connect your campus.
 * 
 * Copyright (C) 2015 Motivis Learning Systems Inc.
 * 
 * This program is free software: you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 * 
 * To contact Motivis Learning Systems Inc.
 * 25 Pelham Road
 * Salem, NH 03790
 * unity@motivislearning.com
-->

<apex:component controller="CommunityFeedNavigationController" allowDML="true">
    <apex:attribute name="current" description="this is current user and photo is uploaded" type="Boolean" required="false" default="true" assignTo="{!currentUser}"/>
    <apex:attribute name="photoUrl" description="" type="String" required="false" assignTo="{!controllerPhotoUrl}"/>
    <apex:attribute name="currentGroupRole" description="role of the user to this group" type="String" required="false" assignTo="{!groupRole}" />
    <!-- JCROP -->
    <link rel="stylesheet" href="{!$Resource.assets}/plugins/jcrop/css/jquery.Jcrop.min.css" type="text/css"/>
    <script>
        var imgX;
        var imgY;
        var imgSize;
        var rx; // width for thumbnail
        var ry;    // height for thumbnail
        var scale;
        var stepUpload = 0; // step of add photo
        // start modal
        function cancelBtnPhoto(){
            stepUpload = 0;    
            jQuery('#cropper-example-2-modal').modal('hide');
            jQuery('[id$=photoPathIdText]').val(null);
            jQuery('[id$=photoPathId]').val(null);
            jQuery('#step1Id').show();
            jQuery('#saveBtnId').hide();
            jQuery('#step2Id').hide();
            
            // destroy jcrop
            var JcropAPI =jQuery('[id$=croppingImageId]').data('Jcrop');
            if(typeof JcropAPI !== 'undefined'){
                JcropAPI.destroy();
            };
            jQuery('#errorMsgId').hide();
            jQuery('[id$=croppingImageId]').attr('src', "#");
        }
        
        function showModal() {
        
            stepUpload = 1;
            jQuery('#cropper-example-2-modal').modal('show');
        };

        // read file
        $(function () {
            jQuery('[id$=photoPathId]').change(function () {
                stepUpload = 2;
                if (this.files && this.files[0]) {
                    if (this.files[0].type.indexOf('image/') != 0 || this.files[0].size > 8388608) {
                        //error
                        jQuery('#errorMsgId').show();
                    }
                    else { 
                        //read file
                        var reader = new FileReader();
                        reader.onload = imageIsLoaded;
                        reader.readAsDataURL(this.files[0]);
                    }
                }
            });
        });    
            
        var imgRealHeight;
        var imgRealWidth;
        var img1 = new Image();
        img1.onload = function() {
            stepUpload = 3;
            // show hide el
            jQuery('#step1Id').hide();
            jQuery('#saveBtnId').show();
            jQuery('#step2Id').show();
            
            // calculate real width and height
            imgRealWidth = this.width;
            imgRealHeight = this.height;
            // remove styles
            jQuery('[id$=croppingImageId]').removeAttr("width").removeAttr("height").css({ width: "auto" , height: "auto" });
            // set image and preview image
            jQuery('[id$=croppingImageId]').attr('src', img1.src);
            jQuery('#previewImg').attr('src',  img1.src);
            // add bootstrap class
            jQuery('[id$=croppingImageId]').addClass('img-responsive imgsizeStyle'); 
            
            // start cropping with params
            var imgWidth =jQuery('[id$=croppingImageId]').width();
            var imgHeight =jQuery('[id$=croppingImageId]').height();
            scale = imgRealWidth/$('[id$=croppingImageId]').width();
            var rectSide = (imgWidth >= imgHeight)?imgHeight/3:imgWidth/3;
            jQuery('[id$=croppingImageId]').Jcrop({
                onChange: showPreview, onSelect: showPreview, aspectRatio: 1,
                setSelect: [ imgWidth/2-rectSide, imgHeight/2-rectSide, imgWidth/2+rectSide, imgHeight/2+rectSide ]
            });
        }
        
        // show img and crop it
        function imageIsLoaded(e) {
            img1.src =  e.target.result;
        };
        
        function showPreview(coords) {
            rx = 100 / coords.w;
            ry = 100 / coords.h;
            imgX = coords.x;
            imgY = coords.y;
            imgSize = coords.w;
            jQuery('#previewImg').css({
                width: Math.round(rx *jQuery('[id$=croppingImageId]').width()) + 'px',
                height: Math.round(ry *jQuery('[id$=croppingImageId]').height()) + 'px',
                marginLeft: '-' + Math.round(100 / coords.w * coords.x) + 'px',
                marginTop: '-' + Math.round(100 / coords.h * coords.y) + 'px'
            });
        }
        
        // save photo
        function saveBtn() {
            stepUpload = 4;
            jQuery('[id$=cropXId]').val(Math.round(imgX*scale));
            jQuery('[id$=cropYId]').val(Math.round(imgY*scale));
            jQuery('[id$=cropSizeId]').val(Math.round(imgSize*scale));
            // call action function and save img and crop it
            photoaction();
        }
    </script>
    
    <!-- Show img -->
    <div class="CommunityUserPhoto">
        <div class="user-photo margin-bottom-10">
            <apex:image value="{!controllerPhotoUrl}" styleclass="img-responsive img-bordered" width="100%" /><!-- rendered="{!!current}" -->
            <apex:outputPanel rendered="{!permitions}">    
                <a href="" class="user-photo-link">
                    <div class="user-photo-inner" onClick="showModal();">
                        {!actionPhotoLabel}
                    </div>
                </a>
            </apex:outputPanel>
        </div>    
        <!-- modal window -->
        <div class="modal fade" id="cropper-example-2-modal" aria-live="assertive" role="dialog" tabindex="-1" aria-labelledby="stfol" aria-hidden="true">
            <!-- <i class="fa fa-spinner fa-pulse m-status"></i>  -->
            <div id="stfomd" class="modal-dialog">
                <div class="modal-content">
                    <apex:form >
                        <div class="modal-header">
                            <button aria-hidden="true" data-dismiss="modal" class="close" type="button">&times;</button>
                            <h4 class="modal-title">{!modalTitle}</h4>
                        </div>
                        <div class="modal-body">
                            <apex:messages ></apex:messages>
                            <div id="errorMsgId" class="alert alert-danger fade in" style="display:none;">{!$Label.ERR_Group_Picture_FileError}</div>
                            <apex:outputPanel id="modalPanelId">
                                <div id="step1Id" class="row sky-form">
                                    <label class="info">{!$Label.LBL_PictureUploadModal_SizeWarning}</label>
                                    
                                    <label for="file" class="input input-file">
                                        <div class="button">
                                            <apex:inputFile id="photoPathId" value="{!photoBody}" filename="{!photoName}" contentType="{!photoContentType}" accept="image/*" onchange="this.parentNode.nextSibling.value = this.value"/>
                                            {!$Label.BTN_Browse}
                                        </div>
                                        <input id="photoPathIdText" type="text" readonly=""/>
                                    </label>
                                    <apex:inputText id="cropXId" value="{!cropX}" style="display:none" />
                                    <apex:inputText id="cropYId" value="{!cropY}" style="display:none"/>
                                    <apex:inputText id="cropSizeId" value="{!cropSize}" style="display:none"/>
                                </div>
                                <div id="step2Id" class="row sky-form" style="display:none;">
                                    <div id="cropper-example-2">
                                        <apex:image id="croppingImageId" value="#" alt="Group image"/>
                                    </div>
                                    <div class="pad">
                                        <hr/>
                                    </div>
                                    <div class="preview-img__container">
                                        <img src="#" id="previewImg" />
                                    </div>
                                    <h5>{!$Label.LBL_Thumbnail}</h5>
                                    <h6>{!$Label.LBL_Thumbnail_Use}</h6>
                                </div>
                            </apex:outputPanel>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn-u btn-u-default margin-right-10" onClick="cancelBtnPhoto();return false;">{!$Label.BTN_Cancel}</button>
                            <button id="saveBtnId" type="button" class="btn-u btn-u-primary" onClick="saveBtn();return false;" style="display:none;">{!$Label.BTN_Save}</button>
                        </div>
                        <apex:actionFunction action="{!photoaction}" name="photoaction"/>
                    </apex:form>
                </div>
            </div>
        </div>
    </div>
</apex:component>